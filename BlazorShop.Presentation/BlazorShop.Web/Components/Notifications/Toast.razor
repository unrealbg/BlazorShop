@using BlazorShop.Web.Shared.Toast
@if (_toasts.Any(t => t.Position == ToastPosition.TopRight))
{
    <div class="custom-toast-container top-right">
        @foreach (var toast in _toasts.Where(t => t.Position == ToastPosition.TopRight))
        {
            <div class="custom-toast @toast.ToastLevel fade show">
                <div class="custom-toast-header">
                    <i class="@GetToastIcon(toast)"></i>
                    <strong class="mr-auto">&nbsp;@toast.Heading</strong>
                    <small>Just now</small>
                    <button type="button" class="ml-2 mb-1 close" @onclick="() => RemoveToast(toast)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="custom-toast-body">
                    @((MarkupString)toast.Message)
                </div>
            </div>
        }
    </div>
}

@if (_toasts.Any(t => t.Position == ToastPosition.BottomRight))
{
    <div class="custom-toast-container bottom-right">
        @foreach (var toast in _toasts.Where(t => t.Position == ToastPosition.BottomRight))
        {
            <div class="custom-toast @toast.ToastLevel fade show">
                <div class="custom-toast-header">
                    <i class="@GetToastIcon(toast)"></i>
                    <strong class="mr-auto">&nbsp;@toast.Heading</strong>
                    <small>Just now</small>
                    <button type="button" class="ml-2 mb-1 close" @onclick="() => RemoveToast(toast)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="custom-toast-body">
                    @((MarkupString)toast.Message)
                </div>
            </div>
        }
    </div>
}

@if (_toasts.Any(t => t.Position == ToastPosition.BottomLeft))
{
    <div class="custom-toast-container bottom-left">
        @foreach (var toast in _toasts.Where(t => t.Position == ToastPosition.BottomLeft))
        {
            <div class="custom-toast @toast.ToastLevel fade show">
                <div class="custom-toast-header">
                    <i class="@GetToastIcon(toast)"></i>
                    <strong class="mr-auto">&nbsp;@toast.Heading</strong>
                    <small>Just now</small>
                    <button type="button" class="ml-2 mb-1 close" @onclick="() => RemoveToast(toast)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="custom-toast-body">
                    @((MarkupString)toast.Message)
                </div>
            </div>
        }
    </div>
}

@if (_toasts.Any(t => t.Position == ToastPosition.TopLeft))
{
    <div class="custom-toast-container top-left">
        @foreach (var toast in _toasts.Where(t => t.Position == ToastPosition.TopLeft))
        {
            <div class="custom-toast @toast.ToastLevel fade show">
                <div class="custom-toast-header">
                    <i class="@GetToastIcon(toast)"></i>
                    <strong class="mr-auto">&nbsp;@toast.Heading</strong>
                    <small>Just now</small>
                    <button type="button" class="ml-2 mb-1 close" @onclick="() => RemoveToast(toast)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="custom-toast-body">
                    @((MarkupString)toast.Message)
                </div>
            </div>
        }
    </div>
}